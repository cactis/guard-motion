{"name":"Guard-motion","tagline":"Guard::Motion automatically run your RubyMotion specs (much like autotest)","body":"# Guard::Motion [![Build Status](https://secure.travis-ci.org/mordaroso/guard-motion.png?branch=master)](http://travis-ci.org/mordaroso/guard-motion)\r\n\r\nMotion guard allows to automatically & intelligently launch [RubyMotion](http://www.rubymotion.com/) specs when files are modified.\r\n\r\n## Install\r\n\r\nPlease be sure to have [Guard](https://github.com/guard/guard) installed before continue.\r\n\r\nInstall the gem:\r\n\r\n```\r\n$ gem install guard-motion\r\n```\r\n\r\nAdd it to your Gemfile (inside development group):\r\n\r\n``` ruby\r\ngem 'guard-motion'\r\n```\r\n\r\nAdd guard definition to your Guardfile by running this command:\r\n\r\n```\r\n$ guard init motion\r\n```\r\n\r\nMake sure Guard::Motion is loaded in your project Rakefile:\r\n\r\n``` ruby\r\nrequire 'guard/motion'\r\n```\r\n\r\n## Usage\r\n\r\nPlease read [Guard usage doc](https://github.com/guard/guard#readme)\r\n\r\n## Guardfile\r\n\r\nMotion guard can be really adapted to all kind of project setup.\r\n\r\n### Typical RubyMotion App\r\n\r\n``` ruby\r\nguard 'motion' do\r\n  watch(%r{^spec/.+_spec\\.rb$})\r\n  watch(%r{^app/(.+)\\.rb$})     { |m| \"spec/#{m[1]}_spec.rb\" }\r\nend\r\n```\r\n\r\n### Typical RubyMotion library\r\n\r\n``` ruby\r\nguard 'motion' do\r\n  watch(%r{^spec/.+_spec\\.rb$})\r\n  watch(%r{^lib/[^/]+/(.+)\\.rb$})     { |m| \"spec/#{m[1]}_spec.rb\" }\r\nend\r\n```\r\n\r\nPlease read [Guard doc](https://github.com/guard/guard#readme) for more information about the Guardfile DSL.\r\n\r\n## Options\r\n\r\nBy default, Guard::Motion will only look for spec files within `spec` in your project root. You can configure Guard::Motion to look in additional paths by using the `:spec_paths` option:\r\n\r\n``` ruby\r\nguard 'motion', :spec_paths => [\"spec\", \"vendor/other_project/spec\"] do\r\n  # ...\r\nend\r\n```\r\nIf you have only one path to look, you can configure `:spec_paths` option with a string:\r\n\r\n``` ruby\r\nguard 'motion', :spec_paths => \"test\" do\r\n  # ...\r\nend\r\n```\r\n\r\n### List of available options:\r\n\r\n``` ruby\r\n:bundler => false                 # use \"bundle exec\" to run the rake command, default: true\r\n:binstubs => true                 # use \"bin/rake\" to run the rake command (takes precedence over :bundle), default: false\r\n:env => {:output => 'test_unit'}  # set env variables to be used by the RubyMotion spec runner, default: {}\r\n:notification => false            # display Growl (or Libnotify) notification after the specs are done running, default: true\r\n:all_after_pass => false          # run all specs after changed specs pass, default: true\r\n:all_on_start => false            # run all the specs at startup, default: true\r\n:keep_failed => false             # keep failed specs until they pass, default: true\r\n:spec_paths => [\"spec\"]           # specify an array of paths that contain spec files\r\n```\r\n\r\nYou can also use a custom binstubs directory using `:binstubs => 'some-dir'`.\r\n\r\nDevelopment\r\n-----------\r\n\r\n* Source hosted at [GitHub](https://github.com/mordaroso/guard-motion)\r\n* Report issues/Questions/Feature requests on [GitHub Issues](https://github.com/mordaroso/guard-motion/issues)\r\n\r\nPull requests are very welcome! Make sure your patches are well tested. Please create a topic branch for every separate change\r\nyou make.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}